DROP TABLE ASSIGNMENT_GRADIENTS;
DROP TABLE ASSIGNMENTS;
DROP TABLE RUN_SUMMARY;
DROP TABLE JOBS;
DROP TABLE VEHICLES;
DROP TABLE RUNS;
DROP TABLE EMISSION_FACTORS;
DROP TABLE SETTINGS;
DROP TABLE CONGESTION_INDEX;
-- #######################################################
-- 컨테이너 운송 최적화 및 CO2 관리 시스템 DDL
-- (co2_calculator.py 호환을 위해 적재량/단일 경사도 필드 재도입)
-- #######################################################

-- 1. EMISSION_FACTORS (CO2 배출 계수 마스터)
-- #######################################################
-- 컨테이너 운송 최적화 및 CO2 관리 시스템 DDL
-- (co2_calculator.py 호환을 위해 적재량/단일 경사도 필드 재도입)
-- #######################################################

-- 1. EMISSION_FACTORS (CO2 배출 계수 마스터)
CREATE TABLE EMISSION_FACTORS (
    FACTOR_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    VEHICLE_TYPE VARCHAR2(50) DEFAULT '25톤 트랙터' NOT NULL,
    FUEL_TYPE VARCHAR2(20) DEFAULT '경유' NOT NULL,
    CO2_GPKM NUMBER(10, 3) NOT NULL, -- 주행(무부하 또는 평균) CO2 g/km
    IDLE_GPS NUMBER(10, 3) NOT NULL, -- 공회전 CO2 g/s
    NOTE VARCHAR2(200)
);

-- 2. VEHICLES (개별 차량 운영 정보)
CREATE TABLE VEHICLES (
    VEHICLE_ID VARCHAR2(20) PRIMARY KEY,
    FACTOR_ID NUMBER NOT NULL REFERENCES EMISSION_FACTORS(FACTOR_ID),
    VEHICLE_TYPE VARCHAR2(10) NOT NULL, -- 예: 'TRACTOR'
    MODEL_NAME VARCHAR2(50),
    CAPACITY_KG NUMBER(10, 2) DEFAULT 25000 NOT NULL -- 최대 적재 용량
);

-- 3. RUNS (최적화 실행 요청 메인 정보)
CREATE TABLE RUNS (
    RUN_ID VARCHAR2(50) PRIMARY KEY,
    RUN_DATE DATE NOT NULL,
    DEPOT_LAT NUMBER(10, 7),
    DEPOT_LON NUMBER(10, 7),
    NATURAL_LANGUAGE_INPUT CLOB,
    OPTIMIZATION_STATUS VARCHAR2(20) NOT NULL,
    CREATED_AT TIMESTAMP WITH LOCAL TIME ZONE DEFAULT SYSTIMESTAMP
);
CREATE INDEX IDX_RUNS_DATE_STATUS ON RUNS (RUN_DATE, OPTIMIZATION_STATUS);

-- 4. JOBS (개별 배송 작업 상세)
CREATE TABLE JOBS (
    JOB_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    RUN_ID VARCHAR2(50) NOT NULL REFERENCES RUNS(RUN_ID) ON DELETE CASCADE,
    SECTOR_ID VARCHAR2(50),
    ADDRESS VARCHAR2(255) NOT NULL,
    LATITUDE NUMBER(10, 7) NOT NULL,
    LONGITUDE NUMBER(10, 7) NOT NULL,
    DEMAND_KG NUMBER(10, 2) NOT NULL, -- 컨테이너 무게
    TW_START TIMESTAMP WITH LOCAL TIME ZONE,
    TW_END TIMESTAMP WITH LOCAL TIME ZONE,
    PRIORITY NUMBER(1) DEFAULT 0
);

-- 5. RUN_SUMMARY (최적화 결과 요약)
CREATE TABLE RUN_SUMMARY (
    SUMMARY_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    RUN_ID VARCHAR2(50) NOT NULL REFERENCES RUNS(RUN_ID) ON DELETE CASCADE,
    ROUTE_OPTION_NAME VARCHAR2(100) NOT NULL,
    TOTAL_DISTANCE_KM NUMBER(10, 2) NOT NULL CHECK (TOTAL_DISTANCE_KM >= 0),
    TOTAL_CO2_G NUMBER(10, 3) NOT NULL CHECK (TOTAL_CO2_G >= 0),
    TOTAL_TIME_MIN NUMBER(5, 0) CHECK (TOTAL_TIME_MIN >= 0),
    SAVING_PCT NUMBER(5, 2),
    LLM_EXPLANATION CLOB,
    CONSTRAINT UK_RUN_SUMMARY UNIQUE (RUN_ID, ROUTE_OPTION_NAME)
);

-- 6. ASSIGNMENTS (경로 노드 및 배차 상세) -- 이 부분이 수정되었습니다.
CREATE TABLE ASSIGNMENTS (
    ASSIGNMENT_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    RUN_ID VARCHAR2(50) NOT NULL REFERENCES RUNS(RUN_ID) ON DELETE CASCADE,
    ROUTE_OPTION_NAME VARCHAR2(100) NOT NULL,
    VEHICLE_ID VARCHAR2(20) REFERENCES VEHICLES(VEHICLE_ID),
    STEP_ORDER NUMBER(5, 0) NOT NULL,
    START_JOB_ID NUMBER REFERENCES JOBS(JOB_ID),
    END_JOB_ID NUMBER REFERENCES JOBS(JOB_ID),
    DISTANCE_KM NUMBER(10, 2) NOT NULL,
    CO2_G NUMBER(10, 5) NOT NULL, -- co2_calculator.py의 원래 정밀도로 복원 (10, 5)
    -- [추가] co2_calculator.py의 seg.load_kg 지원
    LOAD_KG NUMBER(10, 2) DEFAULT 0.0 NOT NULL, 
    TIME_MIN NUMBER(5, 0),
    -- [추가] co2_calculator.py의 seg.slope_pct 지원
    AVG_GRADIENT_PCT NUMBER(5, 2) DEFAULT 0.0, 
    CONGESTION_FACTOR NUMBER(5, 2),
    CONSTRAINT UK_ASSIGNMENTS UNIQUE (RUN_ID, ROUTE_OPTION_NAME, VEHICLE_ID, STEP_ORDER)
);
CREATE INDEX IDX_ASSIG_RUN_VEHICLE_ORDER ON ASSIGNMENTS (RUN_ID, ROUTE_OPTION_NAME, VEHICLE_ID, STEP_ORDER);

-- 7. ASSIGNMENT_GRADIENTS (경로 스텝별 경사도 구간 상세 정보) 
-- co2_calculator.py는 이 테이블을 사용하지 않지만, DB 설계의 정합성을 위해 유지합니다.
CREATE TABLE ASSIGNMENT_GRADIENTS (
    GRADIENT_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    ASSIGNMENT_ID NUMBER NOT NULL REFERENCES ASSIGNMENTS(ASSIGNMENT_ID) ON DELETE CASCADE,
    GRADIENT_PCT_MIN NUMBER(5, 2) NOT NULL,
    GRADIENT_PCT_MAX NUMBER(5, 2) NOT NULL,
    DISTANCE_KM NUMBER(10, 2) NOT NULL CHECK (DISTANCE_KM >= 0),
    CONSTRAINT UK_GRADIENT_ASSIGN UNIQUE (ASSIGNMENT_ID, GRADIENT_PCT_MIN, GRADIENT_PCT_MAX)
);
CREATE INDEX IDX_ASSIGN_GRADIENT ON ASSIGNMENT_GRADIENTS (ASSIGNMENT_ID);

-- 8. SETTINGS (가중치 및 상수 외부화 테이블)
CREATE TABLE SETTINGS (
    key VARCHAR2(64) PRIMARY KEY,
    value VARCHAR2(128)
);

-- 9. CONGESTION_INDEX (Flask 코드 지원용 테이블)
CREATE TABLE CONGESTION_INDEX (
    COMPUTED_AT TIMESTAMP WITH LOCAL TIME ZONE NOT NULL,
    HOUR_OF_DAY NUMBER(2, 0) NOT NULL,
    TIME_FACTOR NUMBER(5, 2) NOT NULL,
    IDLE_FACTOR NUMBER(5, 2) NOT NULL,
    PRIMARY KEY (COMPUTED_AT, HOUR_OF_DAY)
);
