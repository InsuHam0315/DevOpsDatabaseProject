CREATE TABLE EMISSION_FACTORS (
    FACTOR_ID     NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    VEHICLE_TYPE  VARCHAR2(50)   NOT NULL,
    FUEL_TYPE     VARCHAR2(30),
    CO2_GPKM      NUMBER(10,3)   NOT NULL,
    IDLE_GPS      NUMBER(10,3),
    NOTE          VARCHAR2(200)
);

CREATE UNIQUE INDEX UQ_EMISSION_FACTORS_TYPE ON EMISSION_FACTORS (VEHICLE_TYPE);

-- 2) VEHICLES
CREATE TABLE VEHICLES (
    VEHICLE_ID    VARCHAR2(50)  PRIMARY KEY,
    FACTOR_ID     NUMBER        NOT NULL,
    VEHICLE_TYPE  VARCHAR2(50),
    MODEL_NAME    VARCHAR2(100),
    CAPACITY_KG   NUMBER(10,2)  NOT NULL,
    CONSTRAINT FK_VEHICLE_FACTOR FOREIGN KEY (FACTOR_ID)
        REFERENCES EMISSION_FACTORS (FACTOR_ID)
);

CREATE INDEX IX_VEHICLES_FACTOR ON VEHICLES (FACTOR_ID);

-- 3) RUNS - 수정된 버전
CREATE TABLE RUNS (
    RUN_ID                   VARCHAR2(50) PRIMARY KEY,
    RUN_DATE                 DATE         NOT NULL,
    DEPOT_LAT                NUMBER(10,6),
    DEPOT_LON                NUMBER(10,6),
    OPTIMIZATION_STATUS      VARCHAR2(20),
    NATURAL_LANGUAGE_INPUT   CLOB,
    VEHICLE_ID               VARCHAR2(50),
    DIST_KM                  NUMBER(10,3)
);

-- RUNS 외래키는 별도로 추가
ALTER TABLE RUNS ADD CONSTRAINT FK_RUNS_VEHICLE 
    FOREIGN KEY (VEHICLE_ID) REFERENCES VEHICLES (VEHICLE_ID);

-- 4) JOBS
CREATE TABLE JOBS (
    JOB_ID       NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    RUN_ID       VARCHAR2(50) NOT NULL,
    SECTOR_ID    VARCHAR2(50),
    ADDRESS      VARCHAR2(200),
    LATITUDE     NUMBER(10,6),
    LONGITUDE    NUMBER(10,6),
    DEMAND_KG    NUMBER(10,2),
    CONSTRAINT FK_JOBS_RUN FOREIGN KEY (RUN_ID) REFERENCES RUNS (RUN_ID)
);

CREATE INDEX IX_JOBS_RUN ON JOBS (RUN_ID);

-- 5) RUN_SUMMARY
CREATE TABLE RUN_SUMMARY (
    SUMMARY_ID          NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    RUN_ID              VARCHAR2(50) NOT NULL,
    ROUTE_OPTION_NAME   VARCHAR2(100),
    TOTAL_DISTANCE_KM   NUMBER(10,3) NOT NULL,
    TOTAL_CO2_G         NUMBER(12,3) NOT NULL,
    TOTAL_TIME_MIN      NUMBER(10,2),
    LLM_EXPLANATION     CLOB,
    CONSTRAINT FK_SUMMARY_RUN FOREIGN KEY (RUN_ID) REFERENCES RUNS (RUN_ID)
);

CREATE INDEX IX_RUN_SUMMARY_RUN ON RUN_SUMMARY (RUN_ID);

-- 6) ASSIGNMENTS
CREATE TABLE ASSIGNMENTS (
    ASSIGN_ID            NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    RUN_ID               VARCHAR2(50)  NOT NULL,
    ROUTE_OPTION_NAME    VARCHAR2(100),
    VEHICLE_ID           VARCHAR2(50)  NOT NULL,
    STEP_ORDER           NUMBER,
    START_JOB_ID         NUMBER,
    END_JOB_ID           NUMBER,
    DISTANCE_KM          NUMBER(10,3),
    CO2_G                NUMBER(12,5)  NOT NULL,
    LOAD_KG              NUMBER(10,2),
    TIME_MIN             NUMBER(10,2),
    AVG_GRADIENT_PCT     NUMBER(6,3),
    CONGESTION_FACTOR    NUMBER(6,3),
    CONSTRAINT FK_ASSIGN_RUN      FOREIGN KEY (RUN_ID)     REFERENCES RUNS (RUN_ID),
    CONSTRAINT FK_ASSIGN_VEHICLE  FOREIGN KEY (VEHICLE_ID) REFERENCES VEHICLES (VEHICLE_ID),
    CONSTRAINT FK_ASSIGN_STARTJOB FOREIGN KEY (START_JOB_ID) REFERENCES JOBS (JOB_ID),
    CONSTRAINT FK_ASSIGN_ENDJOB   FOREIGN KEY (END_JOB_ID)   REFERENCES JOBS (JOB_ID)
);

CREATE INDEX IX_ASSIGN_RUN ON ASSIGNMENTS (RUN_ID);
CREATE INDEX IX_ASSIGN_VEHICLE ON ASSIGNMENTS (VEHICLE_ID);

-- 7) ASSIGNMENT_GRADIENTS
CREATE TABLE ASSIGNMENT_GRADIENTS (
    GRADIENT_ID    NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ASSIGN_ID      NUMBER NOT NULL,
    SEGMENT_ORDER  NUMBER,
    START_KM       NUMBER(10,3),
    END_KM         NUMBER(10,3),
    AVG_GRADE_PCT  NUMBER(6,3),
    NOTE           VARCHAR2(200),
    CONSTRAINT FK_AG_ASSIGN FOREIGN KEY (ASSIGN_ID)
        REFERENCES ASSIGNMENTS (ASSIGN_ID)
);

CREATE INDEX IX_AG_ASSIGN ON ASSIGNMENT_GRADIENTS (ASSIGN_ID);

-- 8) SETTINGS
CREATE TABLE SETTINGS (
    KEY    VARCHAR2(100) PRIMARY KEY,
    VALUE  VARCHAR2(200)
);

-- 9) CONGESTION_INDEX
CREATE TABLE CONGESTION_INDEX (
    COMPUTED_AT TIMESTAMP      NOT NULL,
    HOUR_OF_DAY NUMBER(2)      NOT NULL,
    TIME_FACTOR NUMBER(6,3)    NOT NULL,
    IDLE_FACTOR NUMBER(6,3)    NOT NULL
);

CREATE INDEX IX_CONGESTION_HOUR ON CONGESTION_INDEX (HOUR_OF_DAY);
