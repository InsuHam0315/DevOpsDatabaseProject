-- ========== 정리(있으면만 드롭) ==========

BEGIN EXECUTE IMMEDIATE 'DROP TABLE ASSIGNMENT_GRADIENTS CASCADE CONSTRAINTS'; EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE ASSIGNMENTS CASCADE CONSTRAINTS';          EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE RUN_SUMMARY CASCADE CONSTRAINTS';          EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE JOBS CASCADE CONSTRAINTS';                 EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE RUNS CASCADE CONSTRAINTS';                 EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE SECTORS CASCADE CONSTRAINTS';              EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE VEHICLES CASCADE CONSTRAINTS';             EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE EMISSION_FACTORS CASCADE CONSTRAINTS';     EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE SETTINGS CASCADE CONSTRAINTS';             EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE CONGESTION_INDEX CASCADE CONSTRAINTS';     EXCEPTION WHEN OTHERS THEN NULL; END;
/
-- (팀원 환경 호환: ITS/WEATHER 테이블 DROP 구문 제거)

-- ========== 1) EMISSION_FACTORS ==========

CREATE TABLE EMISSION_FACTORS (
    FACTOR_ID     NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    VEHICLE_TYPE  VARCHAR2(50)   NOT NULL,
    FUEL_TYPE     VARCHAR2(30),
    CO2_GPKM      NUMBER(10,3)   NOT NULL,
    IDLE_GPS      NUMBER(10,3),            -- 공회전 g/min 가정
    NOTE          VARCHAR2(200)
);

CREATE UNIQUE INDEX UQ_EMISSION_FACTORS_TYPE ON EMISSION_FACTORS (VEHICLE_TYPE);

-- ========== 2) VEHICLES ==========

CREATE TABLE VEHICLES (
    VEHICLE_ID    VARCHAR2(50)  PRIMARY KEY,
    FACTOR_ID     NUMBER        NOT NULL,
    VEHICLE_TYPE  VARCHAR2(50),         -- DML에서 사용
    MODEL_NAME    VARCHAR2(100),        -- DML에서 사용
    CAPACITY_KG   NUMBER(10,2)  NOT NULL,
    CONSTRAINT FK_VEHICLE_FACTOR FOREIGN KEY (FACTOR_ID)
        REFERENCES EMISSION_FACTORS (FACTOR_ID)
);

CREATE INDEX IX_VEHICLES_FACTOR ON VEHICLES (FACTOR_ID);

-- ========== 3) SECTORS — 프론트엔드 섹터 관리 API를 위한 테이블 추가 ==========

CREATE TABLE SECTORS (
    SECTOR_ID    VARCHAR2(50)  PRIMARY KEY,
    SECTOR_NAME  VARCHAR2(100) NOT NULL,
    LATITUDE     NUMBER(10,6)  NOT NULL,
    LONGITUDE    NUMBER(10,6)  NOT NULL,
    TW_START     TIMESTAMP,              -- 시간창 시작 (시간만 사용)
    TW_END       TIMESTAMP,              -- 시간창 종료 (시간만 사용)
    PRIORITY     NUMBER(1) DEFAULT 2,    -- 우선순위 (1:높음, 2:보통, 3:낮음)
    CREATED_AT   TIMESTAMP DEFAULT SYSTIMESTAMP,
    UPDATED_AT   TIMESTAMP DEFAULT SYSTIMESTAMP
);

CREATE INDEX IX_SECTORS_LOCATION ON SECTORS (LATITUDE, LONGITUDE);

-- ========== 4) RUNS (OPTIONAL 제거, 표준 FK만) ==========

CREATE TABLE RUNS (
    RUN_ID                   VARCHAR2(50) PRIMARY KEY,
    RUN_DATE                 DATE         NOT NULL,
    DEPOT_LAT                NUMBER(10,6),
    DEPOT_LON                NUMBER(10,6),
    OPTIMIZATION_STATUS      VARCHAR2(20),
    NATURAL_LANGUAGE_INPUT   CLOB,
    VEHICLE_ID               VARCHAR2(50),        -- 선택 사용
    DIST_KM                  NUMBER(10,3),        -- 선택 사용
    CONSTRAINT FK_RUNS_VEHICLE FOREIGN KEY (VEHICLE_ID)
        REFERENCES VEHICLES (VEHICLE_ID)
);

CREATE INDEX IX_RUNS_DATE ON RUNS (RUN_DATE);
CREATE INDEX IX_RUNS_STATUS ON RUNS (OPTIMIZATION_STATUS);

-- ========== 5) JOBS — 프론트엔드용 컬럼 추가 (TW_START/TW_END/PRIORITY) ==========

CREATE TABLE JOBS (
    JOB_ID       NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    RUN_ID       VARCHAR2(50) NOT NULL,
    SECTOR_ID    VARCHAR2(50),
    ADDRESS      VARCHAR2(200),
    LATITUDE     NUMBER(10,6),
    LONGITUDE    NUMBER(10,6),
    DEMAND_KG    NUMBER(10,2),
    TW_START     TIMESTAMP,              -- 프론트엔드용: 시간창 시작
    TW_END       TIMESTAMP,              -- 프론트엔드용: 시간창 종료
    PRIORITY     NUMBER(1) DEFAULT 2,    -- 프론트엔드용: 우선순위 (1:높음, 2:보통, 3:낮음)
    CONSTRAINT FK_JOBS_RUN FOREIGN KEY (RUN_ID) REFERENCES RUNS (RUN_ID),
    CONSTRAINT FK_JOBS_SECTOR FOREIGN KEY (SECTOR_ID) REFERENCES SECTORS (SECTOR_ID)
);

CREATE INDEX IX_JOBS_RUN ON JOBS (RUN_ID);
CREATE INDEX IX_JOBS_SECTOR ON JOBS (SECTOR_ID);
CREATE INDEX IX_JOBS_TW ON JOBS (TW_START, TW_END);

-- ========== 6) RUN_SUMMARY — 프론트엔드용 컬럼 추가 (SAVING_PCT) ==========

CREATE TABLE RUN_SUMMARY (
    SUMMARY_ID          NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    RUN_ID              VARCHAR2(50) NOT NULL,
    ROUTE_OPTION_NAME   VARCHAR2(100),
    TOTAL_DISTANCE_KM   NUMBER(10,3) NOT NULL,
    TOTAL_CO2_G         NUMBER(12,3) NOT NULL,
    TOTAL_TIME_MIN      NUMBER(10,2),
    SAVING_PCT          NUMBER(5,2),              -- 프론트엔드용: 절감율 (%)
    LLM_EXPLANATION     CLOB,
    CONSTRAINT FK_SUMMARY_RUN FOREIGN KEY (RUN_ID) REFERENCES RUNS (RUN_ID)
);

CREATE INDEX IX_RUN_SUMMARY_RUN ON RUN_SUMMARY (RUN_ID);

-- ========== 7) ASSIGNMENTS ==========

CREATE TABLE ASSIGNMENTS (
    ASSIGN_ID            NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    RUN_ID               VARCHAR2(50)  NOT NULL,
    ROUTE_OPTION_NAME    VARCHAR2(100),
    VEHICLE_ID           VARCHAR2(50)  NOT NULL,
    STEP_ORDER           NUMBER,
    START_JOB_ID         NUMBER,
    END_JOB_ID           NUMBER,
    DISTANCE_KM          NUMBER(10,3),
    CO2_G                NUMBER(12,5)  NOT NULL,
    LOAD_KG              NUMBER(10,2),
    TIME_MIN             NUMBER(10,2),
    AVG_GRADIENT_PCT     NUMBER(6,3),
    CONGESTION_FACTOR    NUMBER(6,3),
    CONSTRAINT FK_ASSIGN_RUN      FOREIGN KEY (RUN_ID)       REFERENCES RUNS (RUN_ID),
    CONSTRAINT FK_ASSIGN_VEHICLE  FOREIGN KEY (VEHICLE_ID)   REFERENCES VEHICLES (VEHICLE_ID),
    CONSTRAINT FK_ASSIGN_STARTJOB FOREIGN KEY (START_JOB_ID) REFERENCES JOBS (JOB_ID),
    CONSTRAINT FK_ASSIGN_ENDJOB   FOREIGN KEY (END_JOB_ID)   REFERENCES JOBS (JOB_ID)
);

CREATE INDEX IX_ASSIGN_RUN ON ASSIGNMENTS (RUN_ID);
CREATE INDEX IX_ASSIGN_VEHICLE ON ASSIGNMENTS (VEHICLE_ID);

-- ========== 8) ASSIGNMENT_GRADIENTS ==========

CREATE TABLE ASSIGNMENT_GRADIENTS (
    GRADIENT_ID    NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ASSIGN_ID      NUMBER NOT NULL,
    SEGMENT_ORDER  NUMBER,
    START_KM       NUMBER(10,3),
    END_KM         NUMBER(10,3),
    AVG_GRADE_PCT  NUMBER(6,3),
    NOTE           VARCHAR2(200),
    CONSTRAINT FK_AG_ASSIGN FOREIGN KEY (ASSIGN_ID)
        REFERENCES ASSIGNMENTS (ASSIGN_ID)
);

CREATE INDEX IX_AG_ASSIGN ON ASSIGNMENT_GRADIENTS (ASSIGN_ID);

-- ========== 9) SETTINGS — DML에서 MERGE 시 s.key 사용 ==========

CREATE TABLE SETTINGS (
    KEY    VARCHAR2(100) PRIMARY KEY,
    VALUE  VARCHAR2(200)
);

-- ========== 10) CONGESTION_INDEX ==========

CREATE TABLE CONGESTION_INDEX (
    COMPUTED_AT TIMESTAMP      NOT NULL,
    HOUR_OF_DAY NUMBER(2)      NOT NULL,
    TIME_FACTOR NUMBER(6,3)    NOT NULL,
    IDLE_FACTOR NUMBER(6,3)    NOT NULL
);

CREATE INDEX IX_CONGESTION_HOUR ON CONGESTION_INDEX (HOUR_OF_DAY);

-- ========== 11) ITS_TRAFFIC ==========

CREATE TABLE ITS_TRAFFIC (
    ID                NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    LINK_ID           VARCHAR2(50)   NOT NULL,
    ROAD_NAME         VARCHAR2(200),
    SPEED_KMH         NUMBER(6,2),
    CONGESTION_LEVEL  VARCHAR2(20),
    OBSERVED_AT       TIMESTAMP,
    INGESTED_AT       TIMESTAMP DEFAULT SYSTIMESTAMP
);

CREATE INDEX IX_ITS_OBS ON ITS_TRAFFIC (OBSERVED_AT);
CREATE INDEX IX_ITS_LINK ON ITS_TRAFFIC (LINK_ID);

-- ========== 12) WEATHER_FORECAST ==========

CREATE TABLE WEATHER_FORECAST (
    ID          NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    BASE_DATE   CHAR(8),    -- YYYYMMDD
    BASE_TIME   CHAR(4),    -- HHMM
    CATEGORY    VARCHAR2(10),
    FCST_DATE   CHAR(8),
    FCST_TIME   CHAR(4),
    FCST_VALUE  VARCHAR2(20),
    NX          NUMBER(3),
    NY          NUMBER(3),
    INGESTED_AT TIMESTAMP DEFAULT SYSTIMESTAMP
);

CREATE INDEX IX_WEATHER_BASE ON WEATHER_FORECAST (BASE_DATE, BASE_TIME);
CREATE INDEX IX_WEATHER_FCST ON WEATHER_FORECAST (FCST_DATE, FCST_TIME);

